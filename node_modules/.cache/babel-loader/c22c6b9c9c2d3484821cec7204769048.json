{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\sgz2\\\\Desktop\\\\dashboard_frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\sgz2\\\\Desktop\\\\dashboard_frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"C:\\\\Users\\\\sgz2\\\\Desktop\\\\dashboard_frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\sgz2\\\\desktop\\\\dashboard_frontend\\\\src\\\\contexts\\\\AllRadioOutputContext\\\\AllRadioOutputContext.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nmutation update_pub_review_paragraphs_by_pk($_set: pub_review_paragraphs_set_input, $pk_columns: pub_review_paragraphs_pk_columns_input!) {\\n    update_pub_review_paragraphs_by_pk(pk_columns: $pk_columns, _set: $_set ) {\\n      why_film_works\\n      why_film_doesnt_work\\n      effects_on_people\\n      enjoyability\\n      how_film_doesnt_work\\n      how_film_works\\n      no_effect_on_people\\n      no_enjoyability\\n      no_production_values\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nvar AllRadioOutputReducer = function AllRadioOutputReducer(state, action) {\n  switch (action.type) {\n    case \"effectsonPeople\":\n      return _objectSpread({}, state, {\n        effectsOnPeople: true\n      });\n\n    case \"submitted\":\n      return _objectSpread({}, state, {\n        submitted: true\n      });\n  }\n};\n\nvar UPDATE_PARAGRAPH_DATA = gql(_templateObject());\nexport var AllRadioOutputContext = createContext();\n\nvar AllRadioOutput = function AllRadioOutput(props) {\n  var initialState = {\n    effectsOnPeople: false,\n    submitted: false\n  };\n\n  var _useReducer = useReducer(AllRadioOutputReducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _useMutation = useMutation(UPDATE_PARAGRAPH_DATA),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateParagraphs = _useMutation2[0],\n      data = _useMutation2[1].data;\n\n  useEffect(function () {\n    return function () {};\n  }, [state]);\n  useEffect(function () {\n    console.log(state);\n    updateParagraphs({\n      variables: {\n        pk_columns: {\n          id: 3\n        },\n        _set: {\n          effects_on_people: state.effectsOnPeople\n        }\n      }\n    });\n    return function () {};\n  }, [state.submitted]);\n  return React.createElement(AllRadioOutputContext.Provider, {\n    value: {\n      effectsOnPeople: state.effectsOnPeople,\n      radioDispatch: dispatch,\n      radioOutputState: state\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AllRadioOutput;","map":{"version":3,"sources":["C:\\Users\\sgz2\\desktop\\dashboard_frontend\\src\\contexts\\AllRadioOutputContext\\AllRadioOutputContext.js"],"names":["React","createContext","useReducer","useEffect","useQuery","useMutation","gql","AllRadioOutputReducer","state","action","type","effectsOnPeople","submitted","UPDATE_PARAGRAPH_DATA","AllRadioOutputContext","AllRadioOutput","props","initialState","dispatch","updateParagraphs","data","console","log","variables","pk_columns","id","_set","effects_on_people","radioDispatch","radioOutputState","children"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,aAAd,EAA4BC,UAA5B,EAAuCC,SAAvC,QAAuD,OAAvD;AACA,SAAQC,QAAR,EAAiBC,WAAjB,QAAmC,qBAAnC;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAKA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,iBAAL;AACI,+BACOF,KADP;AAEIG,QAAAA,eAAe,EAAE;AAFrB;;AAIJ,SAAK,WAAL;AACA,+BACOH,KADP;AAEII,QAAAA,SAAS,EAAE;AAFf;AAPJ;AAYH,CAbD;;AAeA,IAAMC,qBAAqB,GAAGP,GAAH,mBAA3B;AAgBA,OAAO,IAAMQ,qBAAqB,GAAGb,aAAa,EAA3C;;AAEP,IAAMc,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAC5B,MAAMC,YAAY,GAAG;AAClBN,IAAAA,eAAe,EAAG,KADA;AAElBC,IAAAA,SAAS,EAAC;AAFQ,GAArB;;AAD4B,oBAOHV,UAAU,CAACK,qBAAD,EAAuBU,YAAvB,CAPP;AAAA;AAAA,MAOrBT,KAPqB;AAAA,MAOfU,QAPe;;AAAA,qBASMb,WAAW,CAACQ,qBAAD,CATjB;AAAA;AAAA,MASrBM,gBATqB;AAAA,MASHC,IATG,oBASHA,IATG;;AAU5BjB,EAAAA,SAAS,CAAC,YAAM;AACZ,WAAO,YAAM,CACZ,CADD;AAEH,GAHQ,EAGN,CAACK,KAAD,CAHM,CAAT;AAKAL,EAAAA,SAAS,CAAC,YAAM;AACZkB,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACAW,IAAAA,gBAAgB,CACZ;AACII,MAAAA,SAAS,EACG;AACIC,QAAAA,UAAU,EAAE;AACIC,UAAAA,EAAE,EAAE;AADR,SADhB;AAIIC,QAAAA,IAAI,EAAE;AACEC,UAAAA,iBAAiB,EAAEnB,KAAK,CAACG;AAD3B;AAJV;AAFhB,KADY,CAAhB;AAaA,WAAO,YAAM,CACZ,CADD;AAEH,GAjBQ,EAiBN,CAACH,KAAK,CAACI,SAAP,CAjBM,CAAT;AAoBA,SACA,oBAAC,qBAAD,CAAuB,QAAvB;AACI,IAAA,KAAK,EAAI;AACLD,MAAAA,eAAe,EAACH,KAAK,CAACG,eADjB;AAELiB,MAAAA,aAAa,EAACV,QAFT;AAGLW,MAAAA,gBAAgB,EAACrB;AAHZ,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOCQ,KAAK,CAACc,QAPP,CADA;AAUH,CA7CD;;AAiDA,eAAef,cAAf","sourcesContent":["import React,{createContext,useReducer,useEffect} from 'react';\r\nimport {useQuery,useMutation} from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\n\r\n\r\n\r\n\r\nconst AllRadioOutputReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case \"effectsonPeople\":\r\n            return {\r\n                ...state,\r\n                effectsOnPeople: true,\r\n            }\r\n        case \"submitted\":\r\n        return {\r\n            ...state,\r\n            submitted: true,\r\n        }\r\n    }\r\n}\r\n\r\nconst UPDATE_PARAGRAPH_DATA = gql`\r\nmutation update_pub_review_paragraphs_by_pk($_set: pub_review_paragraphs_set_input, $pk_columns: pub_review_paragraphs_pk_columns_input!) {\r\n    update_pub_review_paragraphs_by_pk(pk_columns: $pk_columns, _set: $_set ) {\r\n      why_film_works\r\n      why_film_doesnt_work\r\n      effects_on_people\r\n      enjoyability\r\n      how_film_doesnt_work\r\n      how_film_works\r\n      no_effect_on_people\r\n      no_enjoyability\r\n      no_production_values\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AllRadioOutputContext = createContext();\r\n\r\nconst AllRadioOutput = props => {\r\n    const initialState = {\r\n       effectsOnPeople : false,\r\n       submitted:false,\r\n    }\r\n\r\n\r\n    const [state,dispatch] = useReducer(AllRadioOutputReducer,initialState);\r\n\r\n    const [updateParagraphs,{data}] = useMutation(UPDATE_PARAGRAPH_DATA);\r\n    useEffect(() => {\r\n        return () => {\r\n        }\r\n    }, [state])\r\n\r\n    useEffect(() => {\r\n        console.log(state);\r\n        updateParagraphs(\r\n            {\r\n                variables:\r\n                            {\r\n                                pk_columns: {\r\n                                                id: 3\r\n                                            }, \r\n                                _set: {\r\n                                        effects_on_people: state.effectsOnPeople, \r\n                                }\r\n                            }\r\n            }\r\n        );\r\n        return () => {\r\n        }\r\n    }, [state.submitted])\r\n\r\n\r\n    return (\r\n    <AllRadioOutputContext.Provider\r\n        value = {{\r\n            effectsOnPeople:state.effectsOnPeople,\r\n            radioDispatch:dispatch,\r\n            radioOutputState:state\r\n        }}\r\n    >    \r\n    {props.children}\r\n    </AllRadioOutputContext.Provider>)\r\n}\r\n\r\n\r\n\r\nexport default AllRadioOutput;\r\n"]},"metadata":{},"sourceType":"module"}