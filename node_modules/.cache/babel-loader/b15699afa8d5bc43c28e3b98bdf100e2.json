{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\sgz2\\\\Desktop\\\\dashboard_frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\sgz2\\\\desktop\\\\dashboard_frontend\\\\src\\\\components\\\\Reviews\\\\UnLabeledReviewsList.js\";\nimport React, { useState, Fragment } from \"react\";\nimport ReviewItem from \"./ReviewItem\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_UNLABELED_REVIEWS } from \"./reviews.graphql\";\n\nvar UnLabeledReviewsList = function UnLabeledReviewsList(props) {\n  var _useState = useState({\n    filter: \"unlabeled\"\n  }),\n      _useState2 = _slicedToArray(_useState, 1),\n      state = _useState2[0];\n\n  var reviews = props.reviews;\n  var filteredReviews = reviews;\n\n  if (state.filter === \"unlabeled\") {\n    filteredReviews = reviews.filter(function (review) {\n      return review.is_labeled === false;\n    });\n  }\n\n  var reviewList = [];\n  filteredReviews.forEach(function (review, index) {\n    reviewList.push(React.createElement(ReviewItem, {\n      key: index,\n      index: index,\n      review: review,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"reviewListWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, reviewList)));\n};\n\nvar UnLabeledReviewsListQuery = function UnLabeledReviewsListQuery() {\n  var _useQuery = useQuery(GET_UNLABELED_REVIEWS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    console.error(error);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Error!\");\n  }\n\n  return React.createElement(UnLabeledReviewsList, {\n    reviews: data.pub_review_paragraphs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  });\n};\n\nexport default UnLabeledReviewsListQuery;","map":{"version":3,"sources":["C:\\Users\\sgz2\\desktop\\dashboard_frontend\\src\\components\\Reviews\\UnLabeledReviewsList.js"],"names":["React","useState","Fragment","ReviewItem","useQuery","GET_UNLABELED_REVIEWS","UnLabeledReviewsList","props","filter","state","reviews","filteredReviews","review","is_labeled","reviewList","forEach","index","push","UnLabeledReviewsListQuery","loading","error","data","console","pub_review_paragraphs"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAQC,qBAAR,QAAoC,mBAApC;;AAKA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,KAAK,EAAI;AAAA,kBAEpBN,QAAQ,CAAC;AACrBO,IAAAA,MAAM,EAAE;AADa,GAAD,CAFY;AAAA;AAAA,MAE7BC,KAF6B;;AAAA,MAM5BC,OAN4B,GAMjBH,KANiB,CAM5BG,OAN4B;AAOnC,MAAIC,eAAe,GAAGD,OAAtB;;AAEA,MAAID,KAAK,CAACD,MAAN,KAAiB,WAArB,EAAkC;AACjCG,IAAAA,eAAe,GAAGD,OAAO,CAACF,MAAR,CAAe,UAAAI,MAAM;AAAA,aAAIA,MAAM,CAACC,UAAP,KAAsB,KAA1B;AAAA,KAArB,CAAlB;AACD;;AAED,MAAMC,UAAU,GAAG,EAAnB;AACAH,EAAAA,eAAe,CAACI,OAAhB,CAAwB,UAACH,MAAD,EAASI,KAAT,EAAmB;AACzCF,IAAAA,UAAU,CAACG,IAAX,CAAgB,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAED,KAAjB;AAAwB,MAAA,KAAK,EAAEA,KAA/B;AAAsC,MAAA,MAAM,EAAEJ,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AACD,GAFD;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,UAAL,CADF,CADF,CADF;AAQD,CA1BD;;AA8BA,IAAMI,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAM;AAAA,kBACLd,QAAQ,CAACC,qBAAD,CADH;AAAA,MAC9Bc,OAD8B,aAC9BA,OAD8B;AAAA,MACrBC,KADqB,aACrBA,KADqB;AAAA,MACdC,IADc,aACdA,IADc;;AAGtC,MAAIF,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,MAAIC,KAAJ,EAAW;AACTE,IAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,SAAO,oBAAC,oBAAD;AAAsB,IAAA,OAAO,EAAEC,IAAI,CAACE,qBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAXD;;AAaA,eAAeL,yBAAf","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport ReviewItem from \"./ReviewItem\";\r\nimport {useQuery} from '@apollo/react-hooks';\r\nimport {GET_UNLABELED_REVIEWS} from \"./reviews.graphql\"\r\n\r\n\r\n\r\n\r\nconst UnLabeledReviewsList = props => {\r\n  \r\n  const [state] = useState({\r\n      filter: \"unlabeled\"\r\n    });\r\n\r\n   const {reviews} = props;\r\n   let filteredReviews = reviews;\r\n\r\n   if (state.filter === \"unlabeled\") {     \r\n    filteredReviews = reviews.filter(review => review.is_labeled === false);\r\n  }\r\n\r\n  const reviewList = [];\r\n  filteredReviews.forEach((review, index) => {\r\n    reviewList.push(<ReviewItem key={index} index={index} review={review} />);     \r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"reviewListWrapper\">\r\n        <ul>{reviewList}</ul>        \r\n     </div>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst UnLabeledReviewsListQuery = () => {\r\n  const { loading, error, data } = useQuery(GET_UNLABELED_REVIEWS);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  if (error) {\r\n    console.error(error);\r\n    return <div>Error!</div>;\r\n  }\r\n  return <UnLabeledReviewsList reviews={data.pub_review_paragraphs} />;\r\n};\r\n\r\nexport default UnLabeledReviewsListQuery\r\n"]},"metadata":{},"sourceType":"module"}