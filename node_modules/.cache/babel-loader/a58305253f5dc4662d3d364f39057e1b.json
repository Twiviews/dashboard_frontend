{"ast":null,"code":"import _slicedToArray from \"/home/srini/jsprjs/dashboard_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/srini/jsprjs/dashboard_frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/srini/jsprjs/dashboard_frontend/src/components/Todo/UnLabeledReviewsList.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n                query getUnLabeledReviews {\\n                        pub_review_paragraphs(where:{\\n                                                      is_labeled:{ _eq: false}},\\n                                                      limit:5,\\n                                                      order_by: { date_created: desc})\\n                                                      {\\n                                                          id\\n                                                          review_id\\n                                                          paragraph_text\\n                                                          date_created\\n                                                          is_labeled   \\n                                                          production_values \\n\\t\\t                                                      how_film_works \\n\\t\\t                                                      enjoyability \\n\\t\\t                                                      why_film_works \\n                                                      \\t\\teffects_on_people \\n\\t\\t                                                      no_production_values \\n\\t\\t                                                      how_film_doesnt_work \\n\\t\\t                                                      no_enjoyability \\n\\t\\t                                                      why_film_doesnt_work \\n\\t\\t                                                      no_effect_on_people \\n\\t\\t                                                      sentiment       \\n                                                      }\\n                                }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, Fragment } from \"react\";\nimport gql from 'graphql-tag';\nimport ReviewItem from \"./ReviewItem\";\nimport { useQuery } from '@apollo/react-hooks';\nvar GET_UNLABELED_REVIEWS = gql(_templateObject());\n\nvar UnLabeledReviewsList = function UnLabeledReviewsList(props) {\n  var _useState = useState({\n    filter: \"labeled\"\n  }),\n      _useState2 = _slicedToArray(_useState, 1),\n      state = _useState2[0];\n\n  var todos = props.todos;\n  var filteredTodos = todos;\n\n  if (state.filter === \"labeled\") {\n    filteredTodos = todos.filter(function (todo) {\n      return todo.is_labeled === false;\n    });\n  }\n\n  var todoList = [];\n  filteredTodos.forEach(function (todo, index) {\n    todoList.push(React.createElement(TodoItem, {\n      key: index,\n      index: index,\n      todo: todo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"todoListWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, todoList)));\n};\n\nvar UnLabeledReviewsListQuery = function UnLabeledReviewsListQuery() {\n  var _useQuery = useQuery(GET_UNLABELED_REVIEWS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    console.error(error);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Error!\");\n  }\n\n  console.log(data.pub_review_paragraphs[0]);\n  return React.createElement(UnLabeledReviewsList, {\n    todos: data.pub_review_paragraphs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  });\n};\n\nexport default UnLabeledReviewsListQuery;\nexport { GET_UNLABELED_REVIEWS };","map":{"version":3,"sources":["/home/srini/jsprjs/dashboard_frontend/src/components/Todo/UnLabeledReviewsList.js"],"names":["React","useState","Fragment","gql","ReviewItem","useQuery","GET_UNLABELED_REVIEWS","UnLabeledReviewsList","props","filter","state","todos","filteredTodos","todo","is_labeled","todoList","forEach","index","push","UnLabeledReviewsListQuery","loading","error","data","console","log","pub_review_paragraphs"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,SAAQC,QAAR,QAAuB,qBAAvB;AAEA,IAAMC,qBAAqB,GAAGH,GAAH,mBAA3B;;AA0BA,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,KAAK,EAAI;AAAA,kBAEpBP,QAAQ,CAAC;AACrBQ,IAAAA,MAAM,EAAE;AADa,GAAD,CAFY;AAAA;AAAA,MAE7BC,KAF6B;;AAAA,MAM5BC,KAN4B,GAMnBH,KANmB,CAM5BG,KAN4B;AAOnC,MAAIC,aAAa,GAAGD,KAApB;;AAEA,MAAID,KAAK,CAACD,MAAN,KAAiB,SAArB,EAAgC;AAC/BG,IAAAA,aAAa,GAAGD,KAAK,CAACF,MAAN,CAAa,UAAAI,IAAI;AAAA,aAAIA,IAAI,CAACC,UAAL,KAAoB,KAAxB;AAAA,KAAjB,CAAhB;AACD;;AAED,MAAMC,QAAQ,GAAG,EAAjB;AACAH,EAAAA,aAAa,CAACI,OAAd,CAAsB,UAACH,IAAD,EAAOI,KAAP,EAAiB;AACrCF,IAAAA,QAAQ,CAACG,IAAT,CAAc,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAED,KAAf;AAAsB,MAAA,KAAK,EAAEA,KAA7B;AAAoC,MAAA,IAAI,EAAEJ,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AACD,GAFD;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,QAAL,CADF,CADF,CADF;AAQD,CA1BD;;AA8BA,IAAMI,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAM;AAAA,kBACLd,QAAQ,CAACC,qBAAD,CADH;AAAA,MAC9Bc,OAD8B,aAC9BA,OAD8B;AAAA,MACrBC,KADqB,aACrBA,KADqB;AAAA,MACdC,IADc,aACdA,IADc;;AAGtC,MAAIF,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,MAAIC,KAAJ,EAAW;AACTE,IAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,qBAAL,CAA2B,CAA3B,CAAZ;AAEA,SAAO,oBAAC,oBAAD;AAAsB,IAAA,KAAK,EAAEH,IAAI,CAACG,qBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAdD;;AAgBA,eAAeN,yBAAf;AACA,SAAQb,qBAAR","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport gql from 'graphql-tag';\n\nimport ReviewItem from \"./ReviewItem\";\n\nimport {useQuery} from '@apollo/react-hooks';\n\nconst GET_UNLABELED_REVIEWS = gql`\n                query getUnLabeledReviews {\n                        pub_review_paragraphs(where:{\n                                                      is_labeled:{ _eq: false}},\n                                                      limit:5,\n                                                      order_by: { date_created: desc})\n                                                      {\n                                                          id\n                                                          review_id\n                                                          paragraph_text\n                                                          date_created\n                                                          is_labeled   \n                                                          production_values \n\t\t                                                      how_film_works \n\t\t                                                      enjoyability \n\t\t                                                      why_film_works \n                                                      \t\teffects_on_people \n\t\t                                                      no_production_values \n\t\t                                                      how_film_doesnt_work \n\t\t                                                      no_enjoyability \n\t\t                                                      why_film_doesnt_work \n\t\t                                                      no_effect_on_people \n\t\t                                                      sentiment       \n                                                      }\n                                }`;\n\nconst UnLabeledReviewsList = props => {\n  \n  const [state] = useState({\n      filter: \"labeled\"\n    });\n\n   const {todos} = props;\n   let filteredTodos = todos;\n\n   if (state.filter === \"labeled\") {     \n    filteredTodos = todos.filter(todo => todo.is_labeled === false);\n  }\n\n  const todoList = [];\n  filteredTodos.forEach((todo, index) => {\n    todoList.push(<TodoItem key={index} index={index} todo={todo} />);     \n  });\n\n  return (\n    <Fragment>\n      <div className=\"todoListWrapper\">\n        <ul>{todoList}</ul>\n      </div>\n\n    </Fragment>\n  );\n};\n\n\n\nconst UnLabeledReviewsListQuery = () => {\n  const { loading, error, data } = useQuery(GET_UNLABELED_REVIEWS);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  if (error) {\n    console.error(error);\n    return <div>Error!</div>;\n  }\n\n  console.log(data.pub_review_paragraphs[0]);\n\n  return <UnLabeledReviewsList todos={data.pub_review_paragraphs} />;\n};\n\nexport default UnLabeledReviewsListQuery\nexport {GET_UNLABELED_REVIEWS}"]},"metadata":{},"sourceType":"module"}