{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\sgz2\\\\Desktop\\\\dashboard_frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\sgz2\\\\Desktop\\\\dashboard_frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\sgz2\\\\desktop\\\\dashboard_frontend\\\\src\\\\contexts\\\\AllRadioOutputContext\\\\AllRadioOutputContext.js\";\nimport React, { createContext, useReducer } from 'react';\n\nvar AllRadioOutputReducer = function AllRadioOutputReducer(state, action) {\n  switch (action.type) {\n    case \"effectsonPeople\":\n      return _objectSpread({}, state, {\n        effectsOnPeople: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport var AllRadioOutputContext = createContext();\n\nvar AllRadioOutput = function AllRadioOutput(props) {\n  var initialState = {\n    effectsOnPeople: false\n  };\n\n  var _useReducer = useReducer(AllRadioOutputReducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1]; // Search Tweets\n  // Set Loading\n  //const setLoading = () => dispatch({ type:SET_LOADING });\n\n\n  return React.createElement(AllRadioOutputContext.Provider, {\n    value: {\n      effectsOnPeople: state.effectsOnPeople,\n      radioDispatch: dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AllRadioOutput;","map":{"version":3,"sources":["C:\\Users\\sgz2\\desktop\\dashboard_frontend\\src\\contexts\\AllRadioOutputContext\\AllRadioOutputContext.js"],"names":["React","createContext","useReducer","AllRadioOutputReducer","state","action","type","effectsOnPeople","AllRadioOutputContext","AllRadioOutput","props","initialState","dispatch","radioDispatch","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,aAAd,EAA4BC,UAA5B,QAA6C,OAA7C;;AAGA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,iBAAL;AACI,+BACOF,KADP;AAEIG,QAAAA,eAAe,EAAE;AAFrB;;AAIJ;AACI,aAAOH,KAAP;AAPR;AAUH,CAXD;;AAaA,OAAO,IAAMI,qBAAqB,GAAGP,aAAa,EAA3C;;AAEP,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAC5B,MAAMC,YAAY,GAAG;AAClBJ,IAAAA,eAAe,EAAG;AADA,GAArB;;AAD4B,oBAMHL,UAAU,CAACC,qBAAD,EAAuBQ,YAAvB,CANP;AAAA;AAAA,MAMrBP,KANqB;AAAA,MAMfQ,QANe,oBAQ5B;AAGA;AACA;;;AAEA,SACA,oBAAC,qBAAD,CAAuB,QAAvB;AACI,IAAA,KAAK,EAAI;AACLL,MAAAA,eAAe,EAACH,KAAK,CAACG,eADjB;AAELM,MAAAA,aAAa,EAACD;AAFT,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMCF,KAAK,CAACI,QANP,CADA;AASH,CAvBD;;AA2BA,eAAeL,cAAf","sourcesContent":["import React,{createContext,useReducer} from 'react'\r\n\r\n\r\nconst AllRadioOutputReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case \"effectsonPeople\":\r\n            return {\r\n                ...state,\r\n                effectsOnPeople: true,\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const AllRadioOutputContext = createContext();\r\n\r\nconst AllRadioOutput = props => {\r\n    const initialState = {\r\n       effectsOnPeople : false,\r\n    }\r\n\r\n\r\n    const [state,dispatch] = useReducer(AllRadioOutputReducer,initialState);\r\n\r\n    // Search Tweets\r\n    \r\n\r\n    // Set Loading\r\n    //const setLoading = () => dispatch({ type:SET_LOADING });\r\n\r\n    return (\r\n    <AllRadioOutputContext.Provider\r\n        value = {{\r\n            effectsOnPeople:state.effectsOnPeople,\r\n            radioDispatch:dispatch\r\n        }}\r\n    >    \r\n    {props.children}\r\n    </AllRadioOutputContext.Provider>)\r\n}\r\n\r\n\r\n\r\nexport default AllRadioOutput;\r\n"]},"metadata":{},"sourceType":"module"}