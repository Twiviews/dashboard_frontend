{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\sgz2\\\\Desktop\\\\dashboard_frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\sgz2\\\\Desktop\\\\dashboard_frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\sgz2\\\\Desktop\\\\dashboard_frontend\\\\src\\\\contexts\\\\AllRadioOutputContext\\\\AllRadioOutputContext.js\";\nimport React, { createContext } from 'react';\n\nvar AllRadioOutputReducer = function AllRadioOutputReducer(state, action) {\n  switch (action.type) {\n    case SEARCH_TWEETS:\n      return _objectSpread({}, state, {\n        tweets: action.payload,\n        loading: false\n      });\n\n    case SET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport var AllRadioOutputContext = createContext();\n\nvar AllRadioOutput = function AllRadioOutput(props) {\n  var initialState = {\n    tweets: [],\n    tweet: {},\n    loading: false\n  };\n  var delivSysFlag = 0;\n\n  var _useReducer = useReducer(AllRadioOutputReducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1]; // Search Tweets\n  // Set Loading\n  //const setLoading = () => dispatch({ type:SET_LOADING });\n\n\n  return React.createElement(AllRadioOutputContext.Provider, {\n    value: {\n      tweets: state.tweets,\n      tweet: state.tweet,\n      loading: state.loading,\n      searchTweets: searchTweets\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AllRadioOutput;","map":{"version":3,"sources":["C:\\Users\\sgz2\\Desktop\\dashboard_frontend\\src\\contexts\\AllRadioOutputContext\\AllRadioOutputContext.js"],"names":["React","createContext","AllRadioOutputReducer","state","action","type","SEARCH_TWEETS","tweets","payload","loading","SET_LOADING","AllRadioOutputContext","AllRadioOutput","props","initialState","tweet","delivSysFlag","useReducer","dispatch","searchTweets","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,aAAd,QAAkC,OAAlC;;AAGA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKC,aAAL;AACI,+BACOH,KADP;AAEII,QAAAA,MAAM,EAAEH,MAAM,CAACI,OAFnB;AAGIC,QAAAA,OAAO,EAAC;AAHZ;;AAKJ,SAAKC,WAAL;AACI,+BACGP,KADH;AAEAM,QAAAA,OAAO,EAAC;AAFR;;AAIJ;AACI,aAAON,KAAP;AAbR;AAgBH,CAjBD;;AAmBA,OAAO,IAAMQ,qBAAqB,GAAGV,aAAa,EAA3C;;AAEP,IAAMW,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAC5B,MAAMC,YAAY,GAAG;AACjBP,IAAAA,MAAM,EAAC,EADU;AAEjBQ,IAAAA,KAAK,EAAC,EAFW;AAGjBN,IAAAA,OAAO,EAAC;AAHS,GAArB;AAMA,MAAIO,YAAY,GAAG,CAAnB;;AAP4B,oBASHC,UAAU,CAACf,qBAAD,EAAuBY,YAAvB,CATP;AAAA;AAAA,MASrBX,KATqB;AAAA,MASfe,QATe,oBAW5B;AAGA;AACA;;;AAEA,SACA,oBAAC,qBAAD,CAAuB,QAAvB;AACI,IAAA,KAAK,EAAI;AACLX,MAAAA,MAAM,EAACJ,KAAK,CAACI,MADR;AAELQ,MAAAA,KAAK,EAACZ,KAAK,CAACY,KAFP;AAGLN,MAAAA,OAAO,EAACN,KAAK,CAACM,OAHT;AAILU,MAAAA,YAAY,EAAZA;AAJK,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQCN,KAAK,CAACO,QARP,CADA;AAWH,CA5BD;;AAgCA,eAAeR,cAAf","sourcesContent":["import React,{createContext} from 'react'\r\n\r\n\r\nconst AllRadioOutputReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case SEARCH_TWEETS:\r\n            return {\r\n                ...state,\r\n                tweets: action.payload,\r\n                loading:false\r\n            }\r\n        case SET_LOADING:\r\n            return {\r\n            ...state,\r\n            loading:true\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const AllRadioOutputContext = createContext();\r\n\r\nconst AllRadioOutput = props => {\r\n    const initialState = {\r\n        tweets:[],\r\n        tweet:{},\r\n        loading:false,\r\n    }\r\n\r\n    let delivSysFlag = 0;\r\n\r\n    const [state,dispatch] = useReducer(AllRadioOutputReducer,initialState);\r\n\r\n    // Search Tweets\r\n    \r\n\r\n    // Set Loading\r\n    //const setLoading = () => dispatch({ type:SET_LOADING });\r\n\r\n    return (\r\n    <AllRadioOutputContext.Provider\r\n        value = {{\r\n            tweets:state.tweets,\r\n            tweet:state.tweet,\r\n            loading:state.loading,\r\n            searchTweets\r\n        }}\r\n    >    \r\n    {props.children}\r\n    </AllRadioOutputContext.Provider>)\r\n}\r\n\r\n\r\n\r\nexport default AllRadioOutput;\r\n"]},"metadata":{},"sourceType":"module"}