{"ast":null,"code":"import _slicedToArray from \"/home/srini/jsprjs/dashboard_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/srini/jsprjs/dashboard_frontend/src/components/Todo/LabeledReviewsList.js\";\nimport React, { useState, Fragment } from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nvar LabeledReviewsList = function LabeledReviewsList(props) {\n  var _useState = useState({\n    filter: \"completed\",\n    todos: [{\n      id: \"1\",\n      title: \"This is labeled review 1\",\n      is_completed: true,\n      is_public: false\n    }, {\n      id: \"2\",\n      title: \"This is labeled review 2\",\n      is_completed: true,\n      is_public: false\n    }]\n  }),\n      _useState2 = _slicedToArray(_useState, 1),\n      state = _useState2[0];\n\n  var filteredTodos = state.todos;\n\n  if (state.filter === \"completed\") {\n    filteredTodos = state.todos.filter(function (todo) {\n      return todo.is_completed === true;\n    });\n  }\n\n  var todoList = [];\n  filteredTodos.forEach(function (todo, index) {\n    todoList.push(React.createElement(TodoItem, {\n      key: index,\n      index: index,\n      todo: todo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"todoListWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, todoList)));\n};\n\nexport default LabeledReviewsList;","map":{"version":3,"sources":["/home/srini/jsprjs/dashboard_frontend/src/components/Todo/LabeledReviewsList.js"],"names":["React","useState","Fragment","TodoItem","LabeledReviewsList","props","filter","todos","id","title","is_completed","is_public","state","filteredTodos","todo","todoList","forEach","index","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AAEA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,KAAK,EAAI;AAAA,kBAClBJ,QAAQ,CAAC;AACvBK,IAAAA,MAAM,EAAE,WADe;AAEvBC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,EAAE,EAAE,GADN;AAEEC,MAAAA,KAAK,EAAE,0BAFT;AAGEC,MAAAA,YAAY,EAAE,IAHhB;AAIEC,MAAAA,SAAS,EAAE;AAJb,KADK,EAOL;AACEH,MAAAA,EAAE,EAAE,GADN;AAEEC,MAAAA,KAAK,EAAE,0BAFT;AAGEC,MAAAA,YAAY,EAAE,IAHhB;AAIEC,MAAAA,SAAS,EAAE;AAJb,KAPK;AAFgB,GAAD,CADU;AAAA;AAAA,MAC3BC,KAD2B;;AAmBlC,MAAIC,aAAa,GAAGD,KAAK,CAACL,KAA1B;;AACC,MAAIK,KAAK,CAACN,MAAN,KAAiB,WAArB,EAAkC;AACjCO,IAAAA,aAAa,GAAGD,KAAK,CAACL,KAAN,CAAYD,MAAZ,CAAmB,UAAAQ,IAAI;AAAA,aAAIA,IAAI,CAACJ,YAAL,KAAsB,IAA1B;AAAA,KAAvB,CAAhB;AACD;;AAED,MAAMK,QAAQ,GAAG,EAAjB;AACAF,EAAAA,aAAa,CAACG,OAAd,CAAsB,UAACF,IAAD,EAAOG,KAAP,EAAiB;AACrCF,IAAAA,QAAQ,CAACG,IAAT,CAAc,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAED,KAAf;AAAsB,MAAA,KAAK,EAAEA,KAA7B;AAAoC,MAAA,IAAI,EAAEH,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AACD,GAFD;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,QAAL,CADF,CADF,CADF;AAOD,CApCD;;AAsCA,eAAeX,kBAAf","sourcesContent":["import React, { useState, Fragment } from \"react\";\n\nimport TodoItem from \"./TodoItem\";\n\nconst LabeledReviewsList = props => {\n  const [state] = useState({\n    filter: \"completed\",    \n    todos: [\n      {\n        id: \"1\",\n        title: \"This is labeled review 1\",\n        is_completed: true,\n        is_public: false\n      },\n      {\n        id: \"2\",\n        title: \"This is labeled review 2\",\n        is_completed: true,\n        is_public: false\n      }\n    ]\n  });\n\n  let filteredTodos = state.todos;\n   if (state.filter === \"completed\") {\n    filteredTodos = state.todos.filter(todo => todo.is_completed === true);\n  }\n\n  const todoList = [];\n  filteredTodos.forEach((todo, index) => {\n    todoList.push(<TodoItem key={index} index={index} todo={todo} />);\n  });\n\n  return (\n    <Fragment>\n      <div className=\"todoListWrapper\">\n        <ul>{todoList}</ul>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default LabeledReviewsList;"]},"metadata":{},"sourceType":"module"}