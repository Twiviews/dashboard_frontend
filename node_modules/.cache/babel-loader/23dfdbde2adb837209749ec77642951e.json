{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\sgz2\\\\Desktop\\\\dashboard_frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\sgz2\\\\desktop\\\\dashboard_frontend\\\\src\\\\components\\\\RadioButtonGrid\\\\EffectsOnPeopleRadioButtonGroup.js\";\nimport React, { useState, useContext } from 'react';\nimport RadioGroup from './RadioGroup';\nimport { AllRadioOutputContext } from '../../contexts/AllRadioOutputContext/AllRadioOutputContext';\nvar options = [{\n  label: 'N/A',\n  value: 'not_applicable'\n}, {\n  label: 'Effects on People',\n  value: 'effects_on_people'\n}, {\n  label: 'No Effect on People',\n  value: 'no_effect_on_people'\n}];\nexport default function EffectsOnPeopleRadioButtonGroup() {\n  var _useState = useState('not_applicable'),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var radioContext = useContext(AllRadioOutputContext);\n\n  var onChange = function onChange(e) {\n    setValue(e.target.value);\n\n    if (e.target.value === 'effects_on_people') {\n      radioContext.radioDispatch({\n        type: 'effectsonPeople'\n      });\n    } else if (e.target.value === 'no_effect_on_people') {\n      radioContext.radioDispatch({\n        type: 'noEffectOnPeople'\n      });\n    } else if (e.target.value === 'not_applicable') {\n      radioContext.radioDispatch({\n        type: 'noEffectOnPeople'\n      });\n    }\n  };\n\n  return React.createElement(RadioGroup, {\n    value: value,\n    options: options,\n    name: \"effectsonpeople\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["C:\\Users\\sgz2\\desktop\\dashboard_frontend\\src\\components\\RadioButtonGrid\\EffectsOnPeopleRadioButtonGroup.js"],"names":["React","useState","useContext","RadioGroup","AllRadioOutputContext","options","label","value","EffectsOnPeopleRadioButtonGroup","setValue","radioContext","onChange","e","target","radioDispatch","type"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,UAAzB,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,qBAAR,QAAoC,4DAApC;AAGA,IAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CADc,EAEd;AAAED,EAAAA,KAAK,EAAE,mBAAT;AAA8BC,EAAAA,KAAK,EAAE;AAArC,CAFc,EAGd;AAAED,EAAAA,KAAK,EAAE,qBAAT;AAAgCC,EAAAA,KAAK,EAAE;AAAvC,CAHc,CAAhB;AAMA,eAAe,SAASC,+BAAT,GAA2C;AAAA,kBAC9BP,QAAQ,CAAC,gBAAD,CADsB;AAAA;AAAA,MACjDM,KADiD;AAAA,MAC1CE,QAD0C;;AAExD,MAAMC,YAAY,GAAGR,UAAU,CAACE,qBAAD,CAA/B;;AAEA,MAAMO,QAAQ,GAAG,SAAXA,QAAW,CAAAC,CAAC,EAAI;AACpBH,IAAAA,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;;AACA,QAAGK,CAAC,CAACC,MAAF,CAASN,KAAT,KAAmB,mBAAtB,EAA2C;AACzCG,MAAAA,YAAY,CAACI,aAAb,CAA2B;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA3B;AACD,KAFD,MAEO,IAAGH,CAAC,CAACC,MAAF,CAASN,KAAT,KAAmB,qBAAtB,EAA6C;AAClDG,MAAAA,YAAY,CAACI,aAAb,CAA2B;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA3B;AACD,KAFM,MAEA,IAAGH,CAAC,CAACC,MAAF,CAASN,KAAT,KAAmB,gBAAtB,EAAwC;AAC7CG,MAAAA,YAAY,CAACI,aAAb,CAA2B;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA3B;AACD;AACF,GATD;;AAWA,SACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAER,KADT;AAEE,IAAA,OAAO,EAAEF,OAFX;AAGE,IAAA,IAAI,EAAC,iBAHP;AAKE,IAAA,QAAQ,EAAEM,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD","sourcesContent":["import React, { useState,useContext } from 'react';\r\nimport RadioGroup from './RadioGroup'\r\nimport {AllRadioOutputContext} from '../../contexts/AllRadioOutputContext/AllRadioOutputContext'\r\n\r\n\r\nconst options = [\r\n  { label: 'N/A', value: 'not_applicable' },\r\n  { label: 'Effects on People', value: 'effects_on_people'},\r\n  { label: 'No Effect on People', value: 'no_effect_on_people' }\r\n];\r\n\r\nexport default function EffectsOnPeopleRadioButtonGroup() {\r\n  const [value, setValue] = useState('not_applicable');\r\n  const radioContext = useContext(AllRadioOutputContext);\r\n\r\n  const onChange = e => {\r\n    setValue(e.target.value);\r\n    if(e.target.value === 'effects_on_people') {\r\n      radioContext.radioDispatch({ type: 'effectsonPeople'})\r\n    } else if(e.target.value === 'no_effect_on_people') {\r\n      radioContext.radioDispatch({ type: 'noEffectOnPeople'})\r\n    } else if(e.target.value === 'not_applicable') {\r\n      radioContext.radioDispatch({ type: 'noEffectOnPeople'})\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RadioGroup\r\n      value={value}\r\n      options={options}\r\n      name=\"effectsonpeople\"\r\n      \r\n      onChange={onChange}\r\n    />\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}